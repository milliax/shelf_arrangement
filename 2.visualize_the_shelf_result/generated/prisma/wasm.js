
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.InventoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  quantity: 'quantity',
  width: 'width',
  height: 'height',
  depth: 'depth',
  price: 'price',
  weight: 'weight',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  isPromoted: 'isPromoted',
  salesRate: 'salesRate'
};

exports.Prisma.InventoryPlacementScalarFieldEnum = {
  id: 'id',
  inventoryId: 'inventoryId',
  shelfId: 'shelfId',
  order: 'order'
};

exports.Prisma.Optimization_runsScalarFieldEnum = {
  id: 'id',
  run_id: 'run_id',
  status: 'status',
  total_objective: 'total_objective',
  execution_time: 'execution_time',
  parameters: 'parameters',
  created_at: 'created_at',
  completed_at: 'completed_at'
};

exports.Prisma.ShelvesScalarFieldEnum = {
  id: 'id',
  shelf_id: 'shelf_id',
  width: 'width',
  height: 'height',
  depth: 'depth',
  weight: 'weight',
  eye_level: 'eye_level',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Inventory: 'Inventory',
  InventoryPlacement: 'InventoryPlacement',
  optimization_runs: 'optimization_runs',
  shelves: 'shelves'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/max/workspace/shelf_arrangement/2.visualize_the_shelf_result/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/home/max/workspace/shelf_arrangement/2.visualize_the_shelf_result/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider  = \"postgresql\"\n  url       = env(\"DATABASE_URL\")\n  directUrl = env(\"DIRECT_URL\")\n}\n\nmodel Inventory {\n  id          Int      @id @default(autoincrement())\n  name        String\n  description String\n  quantity    Int\n  width       Float\n  height      Float\n  depth       Float\n  price       Float\n  weight      Float\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  isPromoted Boolean @default(false)\n  salesRate  Float? // percentage of items sold in a given time frame (e.g., last month)\n\n  InventoryPlacement InventoryPlacement[]\n}\n\nmodel InventoryPlacement {\n  id String @id @default(cuid())\n\n  inventory   Inventory @relation(fields: [inventoryId], references: [id], onDelete: Cascade)\n  inventoryId Int\n\n  shelf   shelves @relation(fields: [shelfId], references: [id], onDelete: Cascade)\n  shelfId Int\n\n  order Int @default(autoincrement())\n}\n\nmodel optimization_runs {\n  id              Int       @id @default(autoincrement())\n  run_id          String    @unique @db.VarChar(100)\n  status          String?   @db.VarChar(50)\n  total_objective Float?\n  execution_time  Float?\n  parameters      String?\n  created_at      DateTime? @db.Timestamp(6)\n  completed_at    DateTime? @db.Timestamp(6)\n}\n\nmodel shelves {\n  id       Int   @id @default(autoincrement())\n  shelf_id Int   @unique\n  width    Float\n  height   Float\n  depth    Float\n  weight   Float\n\n  eye_level Boolean?\n\n  created_at DateTime? @default(now())\n  updated_at DateTime? @updatedAt\n\n  InventoryPlacement InventoryPlacement[]\n}\n",
  "inlineSchemaHash": "257916b5c1f98bfe7ca9eaa69219f3bedede283a612b72f796e3e4f19084a805",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Inventory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"width\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"height\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"depth\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"weight\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isPromoted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"salesRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"InventoryPlacement\",\"kind\":\"object\",\"type\":\"InventoryPlacement\",\"relationName\":\"InventoryToInventoryPlacement\"}],\"dbName\":null},\"InventoryPlacement\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"inventory\",\"kind\":\"object\",\"type\":\"Inventory\",\"relationName\":\"InventoryToInventoryPlacement\"},{\"name\":\"inventoryId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"shelf\",\"kind\":\"object\",\"type\":\"shelves\",\"relationName\":\"InventoryPlacementToshelves\"},{\"name\":\"shelfId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"order\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":null},\"optimization_runs\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"run_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"total_objective\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"execution_time\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"parameters\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completed_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"shelves\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"shelf_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"width\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"height\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"depth\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"weight\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"eye_level\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"InventoryPlacement\",\"kind\":\"object\",\"type\":\"InventoryPlacement\",\"relationName\":\"InventoryPlacementToshelves\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

